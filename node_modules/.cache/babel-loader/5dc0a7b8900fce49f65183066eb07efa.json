{"ast":null,"code":"var _jsxFileName = \"/home/rahul/learning/react/xebia_assignment/src/components/contents/Details.js\";\nimport React, { Component } from 'react';\nimport '../../index.css';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport LoggedAppBar from '../AppBar';\nimport SideBar from '../SideBar';\nimport axios from 'axios';\n\nclass Details extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      rotation_period: '',\n      orbital_period: '',\n      diameter: '',\n      climate: '',\n      gravity: '',\n      terrain: '',\n      surface_water: '',\n      population: '',\n      residents: [],\n      films: [],\n      created: '',\n      edited: '',\n      url: ''\n    };\n  }\n\n  componentWillMount() {\n    let url = window.location.href;\n    let id = url.split('/');\n    id = id[id.length - 1];\n    axios.get('https://swapi.co/api/planets/' + id + '/').then(res => {\n      console.log(res.data);\n      this.setState({\n        details: {\n          name: res.data['name'],\n          rotation_period: '',\n          orbital_period: '',\n          diameter: '',\n          climate: '',\n          gravity: '',\n          terrain: '',\n          surface_water: '',\n          population: '',\n          residents: [],\n          films: [],\n          created: '',\n          edited: '',\n          url: ''\n        }\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(LoggedAppBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(SideBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.state.details.map((data, index) => {\n      React.createElement(Grid, {\n        container: true,\n        spacing: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        xs: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, data), React.createElement(Grid, {\n        item: true,\n        xs: 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, data));\n    }))));\n  }\n\n}\n\nexport default Details;","map":{"version":3,"sources":["/home/rahul/learning/react/xebia_assignment/src/components/contents/Details.js"],"names":["React","Component","Paper","Grid","LoggedAppBar","SideBar","axios","Details","constructor","state","name","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","residents","films","created","edited","url","componentWillMount","window","location","href","id","split","length","get","then","res","console","log","data","setState","details","render","map","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../../index.css';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport LoggedAppBar from '../AppBar';\nimport SideBar from '../SideBar';\nimport axios from 'axios';\n\nclass Details extends Component {\n  constructor() {\n    super();\n    this.state = {\n        name: '',\n        rotation_period: '',\n        orbital_period: '',\n        diameter: '',\n        climate: '',\n        gravity: '',\n        terrain: '',\n        surface_water: '',\n        population: '',\n        residents: [],\n        films: [],\n        created: '',\n        edited: '',\n        url: '',\n\n    };\n\n\n  }\n\n  componentWillMount(){\n    let url=window.location.href;\n    let id=url.split('/');\n    id=id[id.length-1];\n    axios.get('https://swapi.co/api/planets/'+id+'/').then(res => {\n      console.log(res.data);\n      this.setState({\n        details:{\n          name: res.data['name'],\n          rotation_period: '',\n          orbital_period: '',\n          diameter: '',\n          climate: '',\n          gravity: '',\n          terrain: '',\n          surface_water: '',\n          population: '',\n          residents: [],\n          films: [],\n          created: '',\n          edited: '',\n          url: '',\n  \n        }\n      });\n    });\n  }\n\n\n\n  render() {\n    return (\n      <React.Fragment>\n        <LoggedAppBar></LoggedAppBar>\n        <Grid container spacing={3}>\n            <Grid item xs={3}>\n                <SideBar></SideBar>\n            </Grid>\n            <Grid item xs={9}>\n              {this.state.details.map((data, index)=>{\n              <Grid container spacing={3}>\n              <Grid item xs={2}>\n                    {data}\n                </Grid>\n                <Grid item xs={9}>\n                    {data}\n                </Grid>\n            </Grid>\n\n              })}\n\n            </Grid>\n        </Grid>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Details;"]},"metadata":{},"sourceType":"module"}